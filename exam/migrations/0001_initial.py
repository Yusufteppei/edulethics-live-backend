# Generated by Django 4.1.5 on 2023-02-03 19:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_summernote.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('configurations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChoiceSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.CharField(max_length=64)),
                ('b', models.CharField(max_length=64)),
                ('c', models.CharField(blank=True, max_length=64, null=True)),
                ('d', models.CharField(blank=True, max_length=64, null=True)),
                ('e', models.CharField(blank=True, max_length=64, null=True)),
                ('f', models.CharField(default='', editable=False, max_length=4)),
            ],
            options={
                'verbose_name_plural': 'Choice Sets',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A name that uniquely describes the contest e.g 2023 Yearly Math Contest for Seniors', max_length=32)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('starts_on', models.DateTimeField()),
                ('ends_on', models.DateTimeField()),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configurations.policy')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(help_text='Every exam must belong to an event', on_delete=django.db.models.deletion.PROTECT, related_name='exams', to='exam.event')),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_questions', to='exam.exam')),
            ],
            options={
                'verbose_name_plural': 'Exam Questions',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g SS1-SS2, JSS3, Junior, Senior, Star. Each exam may have different categorization groups', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('address', models.CharField(max_length=128)),
                ('school_type', models.CharField(choices=[('PR', 'Private'), ('PU', 'Public')], max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='exam.level')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='exam.school')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='StudentExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=2, null=True)),
                ('answer_text', models.TextField(blank=True, max_length=1024, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_exam_questions', to='exam.examquestion')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_exam_questions', to='exam.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.subject')),
            ],
            options={
                'verbose_name_plural': 'Student Exam Questions',
                'unique_together': {('student', 'question', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('paid', models.BooleanField(default=False, editable=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='exam.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='exam.student')),
            ],
            options={
                'unique_together': {('student', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', django_summernote.fields.SummernoteTextField()),
                ('correct_answer', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=1, null=True)),
                ('choice_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='exam.choiceset', verbose_name='options')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='exam.subject')),
            ],
            options={
                'verbose_name_plural': 'Question Bank',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('free', models.BooleanField(default=False)),
                ('complete', models.BooleanField(default=False)),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exam.paymenttype')),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exam.registration')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='subjects',
            field=models.ManyToManyField(to='exam.subject'),
        ),
        migrations.AddField(
            model_name='examquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_questions', to='exam.question'),
        ),
        migrations.AddField(
            model_name='exam',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exams', to='exam.level'),
        ),
        migrations.AddField(
            model_name='exam',
            name='students',
            field=models.ManyToManyField(related_name='exams', through='exam.Registration', to='exam.student'),
        ),
        migrations.AddField(
            model_name='exam',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exams', to='exam.subject'),
        ),
        migrations.CreateModel(
            name='StudentExamPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(blank=True, null=True)),
                ('answer_sheet', models.ManyToManyField(to='exam.studentexamquestion')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_exam_papers', to='exam.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_exam_papers', to='exam.student')),
            ],
            options={
                'verbose_name_plural': 'Student Exam Papers',
                'unique_together': {('student', 'exam')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='examquestion',
            unique_together={('exam', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='exam',
            unique_together={('event', 'level', 'subject')},
        ),
    ]
